generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id String @id @unique @default(uuid())

  name     String @db.VarChar(50)
  email    String @unique
  cpf      String @unique
  password String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  userCategory   UserCategory @relation(fields: [userCategoryId], references: [id])
  userCategoryId String       @map("user_category_id")

  @@map("admin")
}

model User {
  id       String @id @default(uuid())
  name     String @db.VarChar(50)
  cpf      String @unique
  email    String @unique
  password String

  userPlan   UserPlan @relation(fields: [userPlanId], references: [id])
  userPlanId String   @map("user_plan_id")

  userCategory   UserCategory @relation(fields: [userCategoryId], references: [id])
  userCategoryId String       @map("user_category_id")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("user")
}

model UserPlan {
  id String @id @default(uuid())

  name        String @unique
  price       Float
  accounts    Int
  description String

  users User[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("user_plan")
}

model UserCategory {
  id      String  @id @default(uuid())
  manager Boolean @default(false)
  admin   Boolean
  user    Boolean

  users  User[]
  admins Admin[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("user_category")
}
